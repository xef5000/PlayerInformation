plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "com.gradleup.shadow" version "8.3.0"
    id 'maven-publish'
}

group = 'ca.xef5000'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'
    implementation 'com.github.stefvanschie.inventoryframework:IF:0.11.3'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'mysql:mysql-connector-java:8.0.33'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20")
    }
}

tasks.build {
    dependsOn shadowJar
}

shadowJar {
    archiveClassifier.set('')
    relocate 'com.github.stefvanschie.inventoryframework', 'ca.xef5000.playerinformation.libs.inventoryframework'
    relocate 'com.zaxxer.hikari', 'ca.xef5000.playerinformation.libs.hikari'
    relocate 'com.mysql', 'ca.xef5000.playerinformation.libs.mysql'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
